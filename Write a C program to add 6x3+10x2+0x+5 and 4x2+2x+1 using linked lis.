#include <stdio.h>
#include <stdlib.h>

struct polynomial
{
    int coeff;
    int power;
    struct polynomial *LINK;
};
typedef struct polynomial NODE;

// function prototypes
NODE* create_poly();
NODE* add_poly(NODE *poly1, NODE *poly2);
void display_poly(NODE *ptr);

NODE* create_poly()
{
    int flag;
    int coeff, pow;

    NODE *temp_node = (NODE*)malloc(sizeof(NODE));
    NODE *poly = temp_node;

    do
    {
        printf("\nEnter coeff:");
        scanf("%d", &coeff);
        temp_node->coeff = coeff;
        printf("\nEnter Pow:");
        scanf("%d", &pow);
        temp_node->power = pow;
        temp_node->LINK = NULL;

        printf("\nDo you want to add more terms? (y=1/n=0):");
        scanf("%d", &flag);
        if (flag == 1)
        {
            temp_node->LINK = (NODE*)malloc(sizeof(NODE));
            temp_node = temp_node->LINK;
            temp_node->LINK = NULL;
        }
    }
    while (flag);

    return poly;
}

NODE* add_poly(NODE *poly1, NODE *poly2)
{
    NODE *temp_node, *poly;
    temp_node = (NODE*)malloc(sizeof(NODE));
    temp_node->LINK = NULL;
    poly = temp_node;

    while (poly1 && poly2)
    {
        if (poly1->power > poly2->power)
        {
            temp_node->power = poly1->power;
            temp_node->coeff = poly1->coeff;
            poly1 = poly1->LINK;
        }
        else if (poly1->power < poly2->power)
        {
            temp_node->power = poly2->power;
            temp_node->coeff = poly2->coeff;
            poly2 = poly2->LINK;
        }
        else // case when powers are equal
        {
            temp_node->power = poly1->power;
            temp_node->coeff = poly1->coeff + poly2->coeff;
            poly1 = poly1->LINK;
            poly2 = poly2->LINK;
        }

        if (poly1 && poly2)
        {
            temp_node->LINK = (NODE*)malloc(sizeof(NODE));
            temp_node = temp_node->LINK;
            temp_node->LINK = NULL;
        }
    }

    while (poly1 || poly2)
    {
        temp_node->LINK = (NODE*)malloc(sizeof(NODE));
        temp_node = temp_node->LINK;
        temp_node->LINK = NULL;
        if (poly1)
        {
            temp_node->power = poly1->power;
            temp_node->coeff = poly1->coeff;
            poly1 = poly1->LINK;
        }
        if (poly2)
        {
            temp_node->power = poly2->power;
            temp_node->coeff = poly2->coeff;
            poly2 = poly2->LINK;
        }
    }

    return poly;
}

void display_poly(NODE *ptr)
{
    while (ptr != NULL)
    {
        printf("%dX^%d", ptr->coeff, ptr->power);
        ptr = ptr->LINK;
        if (ptr != NULL)
        {
            printf("+");
        }
    }
}

int main()
{
    NODE *poly1, *poly2, *result;
    printf("\nCreate polynomial 1:\n");
    poly1 = create_poly();
    printf("\nCreate polynomial 2:\n");
printf("\nPolynomial 1: ");
display_poly(poly1);
printf("\nPolynomial 2: ");
display_poly(poly2);

result = add_poly(poly1, poly2);
printf("\n\nSum of polynomials: ");
display_poly(result);

return 0;
}
