#include <stdio.h>
//#include <conio.h>
#include <stdlib.h>

typedef struct list {
    int no;
    struct list *next;
} LIST;

LIST *p, *t, *h, *y, *ptr, *pt;

void create();
void insert();
void delet();
void display();

int j, pos, k = 1, count;

void main() {
    int n, i = 1, opt;
   // clrscr();
    p = NULL;
    printf("%d",sizeof(LIST));
    printf("Enter the number of nodes:\n");
    scanf("%d", &n);
    count = n;
    while (i <= n) {
        create();
        i++;
    }
    printf("\nEnter your option:\n");
    printf("1. Insert\t2. Delete\t3. Display\t4. Exit\n");
    do {
        scanf("%d", &opt);
        switch (opt) {
            case 1:
                insert();
                count++;
                break;
            case 2:
                delet();
                count--;
                if (count == 0) {
                    printf("\nList is empty\n");
                }
                break;
            case 3:
                printf("List elements are:\n");
                display();
                break;
        }
        printf("\nEnter your option:\n");
    } while (opt != 4);
    //getch();
}

void create() {
    if (p == NULL) {
        p = (LIST *) malloc(sizeof(LIST));
        printf("Enter the element:\n");
        scanf("%d", &p->no);
        p->next = NULL;
        h = p;
    } else {
        t = (LIST *) malloc(sizeof(LIST));
        printf("\nEnter the element:\n");
        scanf("%d", &t->no);
        t->next = NULL;
        p->next = t;
        p = t;
    }
}

void insert() {
    t = h;
    p = (LIST *) malloc(sizeof(LIST));
    printf("Enter the element to be inserted:\n");
    scanf("%d", &p->no);
    printf("Enter the position to insert:\n");
    scanf("%d", &pos);
    if (pos == 1) {
        h = p;
        h->next = t;
    } else {
        for (j = 1; j < pos; j++) {
            y = t;
            t = t->next;
        }
        y->next = p;
        p->next = t;
    }
}

void delet() {
    if (h == NULL) {
        printf("List is empty\n");
        return;
    }
    printf("Enter the node to delete:\n");
    scanf("%d", &pos);
    ptr = h;
    if (pos == 1) {
        h = h->next;
        free(ptr);
    } else {
        while (ptr != NULL && k < pos) {
            k++;
            pt = ptr;
            ptr = ptr->next;
        }
        if (ptr == NULL) {
            printf("Position not found\n");
            return;
        }
        pt->next = ptr->next;
        free(ptr);
    }
    printf("Node deleted successfully\n");
}

void display() {
    t = h;
    while (t != NULL) {
        printf("%d -> ", t->no);
        t = t->next;
    }
    printf("NULL\n");
}
